name: Preview MiniProgram
on:
  workflow_dispatch:
env:
  BRANCH_PROD: pre
  REPOSITORY: 'lowcode-yunti/cloudladder-miniprogram'
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPOSITORY }}
          ref: ${{ env.BRANCH_PROD }}
          token: ${{ secrets.CLOUD_LADDER_DISPATCH }}
          node-version: 18

      - name: Get the latest commit SHA of the repository
        id: get-sha
        run: echo "::set-output name=sha::$(git rev-parse --short=7 HEAD)"

      - name: Get current date
        id: current-date
        run: echo "::set-output name=date::$(TZ=Asia/Shanghai date +'%Y%m%d%H%M%S')"

      - name: Get last few commits
        id: last-commits
        run: |
          commits=$(git log -n 3 --pretty=format:"%h - %s" | tr '\n' ' ' | cut -c 1-100)
          echo "::set-output name=commits::${commits}"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 8.14.1
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build MiniProgram
        run: |
          pnpm i
          pnpm build:weapp

      - name: Compile
        id: preview
        uses: crazyurus/miniprogram-action@1.0.0
        with:
          action_type: preview
          project_path: ./dist
          version: ${{ steps.current-date.outputs.date }}${{ steps.get-sha.outputs.sha }}
          description: ${{ steps.last-commits.outputs.commits }}
        env:
          PRIVATE_KEY: ${{ secrets.WAPP_PRIVATE_KEY }}

      - name: Rename Image from JPG to JPEG
        id: rename-image
        run: |
          mv "${{ steps.preview.outputs.preview_qrcode_path }}" preview_image.jpeg
          echo "::set-output name=jpeg_path::$(pwd)/preview_image.jpeg"

      - name: Upload Image to Feishu and Extract Image Key
        id: get-image
        run: |
          RESPONSE=$(curl --location --request POST 'https://open.feishu.cn/open-apis/im/v1/images' \
          --header 'Authorization: Bearer ${{ secrets.FEI_SHU_TENANT_ACCESS_TOKEN }}' \
          --header 'Content-Type: multipart/form-data' \
          --form 'image_type="message"' \
          --form 'image=@"${{ steps.rename-image.outputs.jpeg_path }}"')
          echo "Full API Response: $RESPONSE"
          IMAGE_KEY=$(echo $RESPONSE | jq -r '.data.image_key')
          echo "Extracted Image Key: $IMAGE_KEY"
          echo "IMAGE_KEY=$IMAGE_KEY" >> $GITHUB_ENV

      - name: Send feishu message
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.FEISHU_ROBOT_WEBHOOK_URL }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: 🎉 有新的小程序预览版发布了！@${{ steps.get-sha.outputs.sha }}
                content:
                - - tag: text
                    text: '请使用微信扫码预览'
                - - tag: img
                    image_key: ${{ steps.get-image.outputs.IMAGE_KEY }}
                    width:300
                    height:300
              
